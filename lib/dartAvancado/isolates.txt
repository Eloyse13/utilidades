isolates são a forma que o dart lida com conorrência.
diferente de outras linguagens que usam threads
compartilando memória, dart usa isolates, que são unidades
independentes de execução com sua própria memória e eventloop.

threads são unidades básicas de execução dentro de um processo.
elas compartilham o mesmo espaço de mémoria  do processo principal , o que permite comunicação rápida entre elas,
mas também pode causar condições de corrida (race conditions) e outors problemas de concorreência.

EXPLICAÇÃO TÉCNICA
um isolante tem seu próprio heap e stack

stack é usado para armazenar:
-variáveis locais
-chamadas de função
-endereços de retorno

CACTERISTICAS:
-estrutura LIFO (last in, firt out)
-alocação e desalocação automática e rápida
-tamanho limitado
-vida curta (enquanto a função estiver ativa)

HEP É USADO PARA ARMAZENAR:
-objetos complexos
-instÂncias que precisam viver mais tempo
-alocação dinâmicas

CARACTERISTICAS:
-gerenciada por garbage collector (colrtor de lixo)
-mais lenta que stack
-tamanho geralmente menor
-permite alocação dinâmica de memória

A comunicação entre isolates ocorre por meio de mensagens (message passing) e 
não há compartilhamento direto de memória.
o isolante principal que roda o UI não deve ser bloqueado com tarefas pesadasncomo parsing de JSON gigante ou cálculo
matemático pesado.
Para evitar isso, você deve rodar essas tarefas em isolantes secundários, garantindo uma interface fluída.

QUANDO USAR ISOLANTES?
-passing de arquivos grandes (JSON, XML, CSV)
-cálculos matemáticos pesados
-processamento de imagem (filtros, compressão)
-amnipulação de arquivos grandes (leitura, escrita, compressão e gravação)
